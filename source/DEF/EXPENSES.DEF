DEFINITION MODULE Expenses;


    (* Expenses -- Records historical information about money and 
                   effort spend during periods of time.  Each expense
                   list is a component of a resource assignment.

       29-May-90  AJL  - Initial version. 
       06-Jul-90  AJL  - Added the create, copy and dispose procs.

    *)


IMPORT Filing;

FROM FlexStor  IMPORT
    (* TYPE *)      AnExtHandle, AnExtStoragePreference;

FROM SYSTEM IMPORT
    (* TYPE *)      ADDRESS;

FROM Timei  IMPORT
    (* TYPE *)      ADate;


TYPE
           (* AnExpenseRecord records either the planned or
              the actual use of a resource or cost category.
              This allows us to plan as well as record
              uneven consumption of resources.
              For costs, we only record the date of the
              expenses recognition, but we allow a much
              larger quantity.
              Note, please, that the amount of space spent on
              this record has the potential for a dramatic
              change in total memory required for a project.
              For this reason, it may be valuable to store
              these records in two bytes less space when the
              real number is not needed.
           *)

    AnExpenseRecord = RECORD
                  (* Record the start and end of the
                     period to which the expense applies. *)
             StartDate,
             EndDate        : ADate;
                  (* Resources and variable costs are
                     measured by the time they consume;
                     fixed and unit costs by the quantity.
                  *)
             AmountSpent : REAL;            (* Money, local currency. *)
             TimeSpent   : LONGINT;         (* Effort, in work hours. *)
                 (* Index into a list of possible expense categories. *)
             Category    : CARDINAL;
                  (* Flag whether this is a PLANNED or ACTUAL cost.
                     In Spike, these are allocated off the PLAN
                     assignments path, and PLANNED EXPENSEs are
                     generated by the CHANGER module only.  ACTUALs
                     are entered or verified by humans. *)
             PlannedExpense : BOOLEAN;
    END;

         (* This is the "open-ended" array pointer for accessing all
            ExpenseRecords for this Assignment.
          *)
    AnExpenseArray = POINTER TO ARRAY [0..2500] OF AnExpenseRecord;


         (* These procedure types are used in the "ForEach...." procedures.
            They are passed one assignment or expense record, and they
            return TRUE to continue processing, or FALSE to stop.
            In addition, the ADDRESS is for communication between the
            procedure and the caller of ForEach.... .
          *)

    AnExpenseProc    = PROCEDURE( VAR AnExpenseRecord,
                                      ADDRESS ) : BOOLEAN;




PROCEDURE CreateExpenseArrayHandle(     PStartDate  : ADate;
                                        Speed  : AnExtStoragePreference
                                   ) : AnExtHandle;


PROCEDURE DisposeExpenseArrayHandle(VAR Handle : AnExtHandle);


PROCEDURE CopyExpenseArrayHandle( VAR Target : AnExtHandle;
                                      Source : AnExtHandle;
                                      Speed  : AnExtStoragePreference );



  (*  ForEachExpense  - Call a routine for each expense record.

      Preconditions  - Must have a valid expense handle.
                       Must provide a procedure to be called for each
                       expense record.
                       Context is user context and not used by this procedure.
                       use it to pass any data you want between levels.

      Postconditions - your procedure will have been called once for
                       each found expense.  If there were no expense
                       records, then it will never have been called.
  *)

PROCEDURE ForEachExpense   ( ExpenseHandle    : AnExtHandle;
                             CalledEachTime   : AnExpenseProc;
                             Context          : ADDRESS );


    (* Loading and storing procedures.  See the Filing module and 
       TLXTL4/TLITL4 for details. *)


PROCEDURE StoreExpenses(     ExpenseHandle : AnExtHandle;
                             StorageProc : Filing.AStoreProc;
                             Context     : ADDRESS );

PROCEDURE LoadExpenses (     ExpenseHandle : AnExtHandle;
                             StoragePref : AnExtStoragePreference;
                             PredictSize : Filing.APredictSizeProc;
                             LoadProc    : Filing.ALoadProc;
                             ReadNext    : Filing.AReadNextProc;
                             Context     : ADDRESS
                        ) : BOOLEAN;



END Expenses.
