DEFINITION MODULE LayoutOutlines;        (*  a subclass of OutlineViews  *)

    (*  MODIFICATION HISTORY:

        28-Jul-89 EGK       Added "GetRecordedEvent" method.
        14-Dec-89 KKC       Patched ALayoutOutlineStatus to 16 bits.
    *)

FROM ActiveViews            IMPORT
    (* TYPE *)                  AnActiveView;

FROM Boxes                  IMPORT
    (* TYPE *)                  ABoxType;

FROM Events                 IMPORT
    (* TYPE *)                  AnEvent;

FROM Kbio                   IMPORT
    (* TYPE *)                  ascreenx, ascreeny, avidmode;

FROM Objects                IMPORT
    (* TYPE *)                  AnObjectMethods, AnObject;

FROM OutlineViews           IMPORT
    (* TYPE *)                  AnOutlineViewMethods;

FROM Rugs                   IMPORT
    (* TYPE *)                  ARug;

FROM TreeObjects            IMPORT
    (* TYPE *)                  ATree, ATreeNode;




TYPE

        (*  ALayoutOutline is a subclass of AnOutlineView  *)

    ALayoutOutline          = POINTER TO ALayoutOutlineRecord;

    ALayoutOutlineMethods   = POINTER TO ALayoutOutlineMethodsRecord;

    ALayoutOutlineRecord    = RECORD
                                Methods     : ALayoutOutlineMethods;
                              END;





    (*  These types are re-definitions of types exported from OutlineViews. *)


    ALayoutOutlineStatus    = (RugTaken, OnScreen, NeedsRedisplay, ViewHidden,
                               CursorOn,
                               LayoutOutlineSpare5, LayoutOutlineSpare6, 
                               LayoutOutlineSpare7, LayoutOutlineSpare8, 
                               LayoutOutlineSpare9);

    ALayoutOutlineStatusSet = SET OF ALayoutOutlineStatus;





(*----------------------------------------------------------------------------

    These are the methods for ALayoutOutline objects.  They inherit and
    redefine methods from OutlineViews, but do not add any new methods
    of their own.

----------------------------------------------------------------------------*)


    ALayoutOutlineMethodsRecord  = RECORD

          Methods           : AnObjectMethods;

          Clone             : PROCEDURE(    ALayoutOutline,
                                        VAR ALayoutOutline )
                                                            : BOOLEAN;
          StoreOn           : PROCEDURE(    ALayoutOutline,
                                            AnObject       );

          Discard           : PROCEDURE(VAR ALayoutOutline );

          SuperclassMethods : AnOutlineViewMethods;

          MethodSize        : CARDINAL;

          ObjectMethodsTag  : CARDINAL;


          GetExternalXY     : PROCEDURE(    ALayoutOutline,
                                        VAR ascreenx,
                                        VAR ascreeny,
                                        VAR ascreenx,
                                        VAR ascreeny       );

          GetInternalXY     : PROCEDURE(    ALayoutOutline,
                                        VAR ascreenx,
                                        VAR ascreeny,
                                        VAR ascreenx,
                                        VAR ascreeny       );

          GetTitle          : PROCEDURE(    ALayoutOutline,
                                        VAR ARRAY OF CHAR  );

          SetObject         : PROCEDURE(    ALayoutOutline,
                                            ATree          );

          GetObject         : PROCEDURE(    ALayoutOutline )
                                                            : ATree;

          Move              : PROCEDURE(    ALayoutOutline,    
                                            ascreenx,        
                                            ascreeny       );

          Display           : PROCEDURE(    ALayoutOutline );

          GetHelp           : PROCEDURE(    ALayoutOutline );

          HideView          : PROCEDURE(    ALayoutOutline );

          RevealView        : PROCEDURE(    ALayoutOutline );

          NotifyOfChange    : PROCEDURE(    ALayoutOutline );

          ObjectViewTag     : CARDINAL;


          RecordEvent       : PROCEDURE(    ALayoutOutline,
                                            AnEvent        );

          GetRecordedEvent  : PROCEDURE(    ALayoutOutline,
                                            CARDINAL,
                                        VAR AnEvent   );

          ActOnEvent        : PROCEDURE(    ALayoutOutline,
                                            AnEvent,
                                        VAR AnEvent        );

          GetCursor         : PROCEDURE(    ALayoutOutline )   
                                                            : BOOLEAN;

          SetCursor         : PROCEDURE(    ALayoutOutline,   
                                            BOOLEAN        );

          SetCursorMode     : PROCEDURE(    ALayoutOutline,
                                            avidmode       );


          ActiveViewTag     : CARDINAL;

          SetFirst          : PROCEDURE(    ALayoutOutline,
                                            ATreeNode      );

          GetFirst          : PROCEDURE(    ALayoutOutline )
                                                            : ATreeNode;

          GetLast           : PROCEDURE(    ALayoutOutline )
                                                            : ATreeNode;

          SetCursorNode     : PROCEDURE(    ALayoutOutline,
                                            ATreeNode      );

          GetCursorNode     : PROCEDURE(    ALayoutOutline )
                                                            : ATreeNode;

          Synchronize       : PROCEDURE(    ALayoutOutline );

          ForceToPosition   : PROCEDURE(    ALayoutOutline,
                                            ATreeNode,
                                            CARDINAL       );

          InquirePosition   : PROCEDURE(    ALayoutOutline,
                                            ATreeNode      )
                                                            : CARDINAL;

          NotifyNodeDeleted : PROCEDURE(    ALayoutOutline,
                                            ATreeNode      );

          ListViewTag       : CARDINAL;

          ResetMatching     : PROCEDURE(    ALayoutOutline );

          GetMatchCount     : PROCEDURE(    ALayoutOutline )
                                                            : CARDINAL;

          FindChar          : PROCEDURE(    ALayoutOutline,
                                            CHAR           )
                                                            : BOOLEAN;

          OutlineViewTag    : CARDINAL;

          LayoutOutlineTag       : CARDINAL;

                              END;









(*----------------------------------------------------------------------------
    InitAsLayoutOutline --

    Initialize the indicated object as a filter outline view.

    Preconditions:
        None.

    Postconditions:
        The object will be a valid filter outline view object.  No storage 
        allocation is done by this procedure.
----------------------------------------------------------------------------*)

PROCEDURE InitAsLayoutOutline(    LayoutOutline : ALayoutOutline;
                                  SuperView     : AnActiveView;
                                  Ulx           : ascreenx;
                                  Uly           : ascreeny;
                                  Lrx           : ascreenx;
                                  Lry           : ascreeny;
                                  Box           : ABoxType;
                                  VideoMode     : avidmode;
                              VAR Title         : ARRAY OF CHAR;
                                  HelpKey       : CARDINAL;
                                  TakeRug       : BOOLEAN       );








(*----------------------------------------------------------------------------
    CreateLayoutOutline --

    Allocate storage for, and initialize the indicated object as a filter 
    outline view.

    Preconditions:
        None.

    Postconditions:
        Iff there is sufficient heap space available, the object will be 
        allocated and initialized as a valid filter outline view object, and 
        TRUE will be returned.  
----------------------------------------------------------------------------*)

PROCEDURE CreateLayoutOutline(VAR LayoutOutline : ALayoutOutline;
                                  SuperView     : AnActiveView;
                                  Ulx           : ascreenx;
                                  Uly           : ascreeny;
                                  Lrx           : ascreenx;
                                  Lry           : ascreeny;
                                  Box           : ABoxType;
                                  VideoMode     : avidmode;
                              VAR Title         : ARRAY OF CHAR;
                                  HelpKey       : CARDINAL;
                                  TakeRug       : BOOLEAN      ) 
                                                                : BOOLEAN;








(*----------------------------------------------------------------------------
    UnInitAsLayoutOutline --

    UnInitialize the indicated object as a filter outline view.

    Preconditions:
        The object will be a valid filter outline view object. 

    Postconditions:
        The outline view will be invalidated.
----------------------------------------------------------------------------*)

PROCEDURE UnInitAsLayoutOutline(    LayoutOutline : ALayoutOutline);









(*----------------------------------------------------------------------------
    CloneLayoutOutlineMethods --

    Make a copy of the filter outline view methods into the indicated method 
    object.

    Preconditions:
        None.

    Postcondition:
        The taks outline view methods will be copied into the indicated 
        method object.
----------------------------------------------------------------------------*)

PROCEDURE CloneLayoutOutlineMethods(    MethodObject : ALayoutOutlineMethods);









(*----------------------------------------------------------------------------
    ValidateLayoutOutline --

    Determine that the indicated object is in fact a valid outline view 
    object.

    Preconditions:
        None.

    Postconditions:
        If the object is not a valid filter outline view object, FatalError 
        will be called.
----------------------------------------------------------------------------*)

PROCEDURE ValidateLayoutOutline(    LayoutOutline : ALayoutOutline);



END LayoutOutlines.
