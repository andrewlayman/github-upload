DEFINITION MODULE GoToOutlines;        (*  a subclass of OutlineViews  *)

    (*  MODIFICATION HISTORY:

        28-Jul-89 EGK       Added "GetRecordedEvent" method.
        14-Dec-89 KKC       Patched AGoToOutlineStatus to 16 bits.
    *)

FROM ActiveViews            IMPORT
    (* TYPE *)                  AnActiveView;

FROM Boxes                  IMPORT
    (* TYPE *)                  ABoxType;

FROM Events                 IMPORT
    (* TYPE *)                  AnEvent;

FROM GoTo                   IMPORT
    (* TYPE *)                  AGoToNameProc;

FROM Kbio                   IMPORT
    (* TYPE *)                  ascreenx, ascreeny, avidmode;

FROM Objects                IMPORT
    (* TYPE *)                  AnObjectMethods, AnObject;

FROM OutlineViews           IMPORT
    (* TYPE *)                  AnOutlineViewMethods;

FROM Rugs                   IMPORT
    (* TYPE *)                  ARug;

FROM TreeObjects            IMPORT
    (* TYPE *)                  ATree, ATreeNode;




TYPE
        (*  AGoToOutline is a subclass of AnOutlineView *)

    AGoToOutline            = POINTER TO AGoToOutlineRecord;

    AGoToOutlineMethods     = POINTER TO AGoToOutlineMethodsRecord;

    AGoToOutlineRecord      = RECORD
                                Methods     : AGoToOutlineMethods;
                              END;



        (*  These types are re-definitions of types exported from ObjectViews,
            with new values added for GoToOutlines
        *)

TYPE
    AGoToOutlineStatus      = (RugTaken, OnScreen, NeedsRedisplay, ViewHidden,
                               CursorOn,
                               GoToOutlineSpare5, GoToOutlineSpare6, 
                               GoToOutlineSpare7, GoToOutlineSpare8, 
                               GoToOutlineSpare9);
                               

    AGoToOutlineStatusSet   = SET OF AGoToOutlineStatus;









    (*  These are the methods for AGoToOutline objects.  They inherit and
        redefine methods from ObjectViews, and add new methods of their own.
    *)

TYPE
    AGoToOutlineMethodsRecord  = RECORD

          Methods           : AnObjectMethods;

          Clone             : PROCEDURE(    AGoToOutline,
                                        VAR AGoToOutline )
                                                          : BOOLEAN;
          StoreOn           : PROCEDURE(    AGoToOutline,
                                            AnObject     );

          Discard           : PROCEDURE(VAR AGoToOutline );

          SuperclassMethods : AnOutlineViewMethods;

          MethodSize        : CARDINAL;

          ObjectMethodsTag  : CARDINAL;


          GetExternalXY     : PROCEDURE(    AGoToOutline,
                                        VAR ascreenx,
                                        VAR ascreeny,
                                        VAR ascreenx,
                                        VAR ascreeny     );

          GetInternalXY     : PROCEDURE(    AGoToOutline,
                                        VAR ascreenx,
                                        VAR ascreeny,
                                        VAR ascreenx,
                                        VAR ascreeny     );

          GetTitle          : PROCEDURE(    AGoToOutline,
                                        VAR ARRAY OF CHAR);

          SetObject         : PROCEDURE(    AGoToOutline,
                                            ATree        );

          GetObject         : PROCEDURE(    AGoToOutline )
                                                          : ATree;

          Move              : PROCEDURE(    AGoToOutline,    
                                            ascreenx,        
                                            ascreeny     );

          Display           : PROCEDURE(    AGoToOutline );

          GetHelp           : PROCEDURE(    AGoToOutline );

          HideView          : PROCEDURE(    AGoToOutline );

          RevealView        : PROCEDURE(    AGoToOutline );

          NotifyOfChange    : PROCEDURE(    AGoToOutline );

          ObjectViewTag     : CARDINAL;


          RecordEvent       : PROCEDURE(    AGoToOutline,
                                            AnEvent      );

          GetRecordedEvent  : PROCEDURE(    AGoToOutline,
                                            CARDINAL,
                                        VAR AnEvent   );

          ActOnEvent        : PROCEDURE(    AGoToOutline,
                                            AnEvent,
                                        VAR AnEvent      );

          GetCursor         : PROCEDURE(    AGoToOutline )   
                                                          : BOOLEAN;

          SetCursor         : PROCEDURE(    AGoToOutline,   
                                            BOOLEAN      );

          SetCursorMode     : PROCEDURE(    AGoToOutline,
                                            avidmode     );

          ActiveViewTag     : CARDINAL;


          SetFirst          : PROCEDURE(    AGoToOutline,
                                            ATreeNode    );

          GetFirst          : PROCEDURE(    AGoToOutline )
                                                          : ATreeNode;

          GetLast           : PROCEDURE(    AGoToOutline )
                                                          : ATreeNode;

          SetCursorNode     : PROCEDURE(    AGoToOutline,
                                            ATreeNode    );

          GetCursorNode     : PROCEDURE(    AGoToOutline )
                                                          : ATreeNode;

          Synchronize       : PROCEDURE(    AGoToOutline );

          ForceToPosition   : PROCEDURE(    AGoToOutline,
                                            ATreeNode,
                                            CARDINAL     );

          InquirePosition   : PROCEDURE(    AGoToOutline,
                                            ATreeNode    )
                                                          : CARDINAL;

          NotifyNodeDeleted : PROCEDURE(    AGoToOutline,
                                            ATreeNode    );

          ListViewTag       : CARDINAL;

          ResetMatching     : PROCEDURE(    AGoToOutline );

          GetMatchCount     : PROCEDURE(    AGoToOutline )
                                                          : CARDINAL;

          FindChar          : PROCEDURE(    AGoToOutline,
                                            CHAR         )
                                                          : BOOLEAN;

          OutlineViewTag    : CARDINAL;

          GoToOutlineTag    : CARDINAL;

                              END;








(*----------------------------------------------------------------------------
    InitAsGoToOutline --

    Initialize the indicated object as a GoTo outline view.

    Preconditions:
        None.

    Postconditions:
        The object will be a valid GoTo outline view object.  No storage 
        allocation is done by this procedure.
----------------------------------------------------------------------------*)

PROCEDURE InitAsGoToOutline(    GoToOutline : AGoToOutline;
                                SuperView   : AnActiveView;
                                Ulx         : ascreenx;
                                Uly         : ascreeny;
                                Lrx         : ascreenx;
                                Lry         : ascreeny;
                                NameProc    : AGoToNameProc;
                                Box         : ABoxType;
                                VideoMode   : avidmode;
                            VAR Title       : ARRAY OF CHAR;
                                HelpKey     : CARDINAL;
                                TakeRug     : BOOLEAN      );








(*----------------------------------------------------------------------------
    CreateGoToOutline --

    Allocate storage for, and initialize the indicated object as a GoTo 
    outline view.

    Preconditions:
        None.

    Postconditions:
        Iff there is sufficient heap space available, the object will be 
        allocated and initialized as a valid GoTo outline view object, and 
        TRUE will be returned.  
----------------------------------------------------------------------------*)

PROCEDURE CreateGoToOutline(VAR GoToOutline : AGoToOutline;
                                SuperView   : AnActiveView;
                                Ulx         : ascreenx;
                                Uly         : ascreeny;
                                Lrx         : ascreenx;
                                Lry         : ascreeny;
                                NameProc    : AGoToNameProc;
                                Box         : ABoxType;
                                VideoMode   : avidmode;
                            VAR Title       : ARRAY OF CHAR;
                                HelpKey     : CARDINAL;
                                TakeRug     : BOOLEAN      ) 
                                                            : BOOLEAN;








(*----------------------------------------------------------------------------
    UnInitAsGoToOutline --

    UnInitialize the indicated object as a GoTo outline view.

    Preconditions:
        The object will be a valid GoTo outline view object. 

    Postconditions:
        The outline view will be invalidated.
----------------------------------------------------------------------------*)

PROCEDURE UnInitAsGoToOutline(    GoToOutline : AGoToOutline);









(*----------------------------------------------------------------------------
    CloneGoToOutlineMethods --

    Make a copy of the GoTo outline view methods into the indicated method 
    object.

    Preconditions:
        None.

    Postcondition:
        The GoTo outline view methods will be copied into the indicated 
        method object.
----------------------------------------------------------------------------*)

PROCEDURE CloneGoToOutlineMethods(    MethodObject : AGoToOutlineMethods);









(*----------------------------------------------------------------------------
    ValidateGoToOutline --

    Determine that the indicated object is in fact a valid GoTo outline view 
    object.

    Preconditions:
        None.

    Postconditions:
        If the object is not a valid GoTo outline view object, FatalError 
        will be called.
----------------------------------------------------------------------------*)

PROCEDURE ValidateGoToOutline(    GoToOutline : AGoToOutline);



END GoToOutlines.
