DEFINITION MODULE SwapFile;

    (* MODIFICATION HISTORY:

        This assemble module is linked into TLSwapf.ovl and TLDOS separately.
        That is the reason we pass the directory to InitSwapFileDelete.

        Jul 10, 89 KKC - First Version.
        Jul 13, 89 KKC - Add new function GetUniqueFileName.
        Aug 02, 89 KKC - Take out GetUniqueFileName.
                       - Pass the swapfile directory to InitSwapFileDelete.
        Aug 16, 89 KKC - Add more documentations.
    *)

(****************************************************************************

    InitSwapFileDelete(VAR DefaultPath : ARRAY OF CHAR );
        Since we create the tlswap file in tlswapf.ovl.  Inside swapfile.asm
    there is no easy way to find out the directory that contains the swap 
    file.  That is why we pass the directory of tlswap in here so that
    we can make a local copy of it for future usage.
    Preconditions:
        DefaultPath contains the directory that has the TLSWAP file.
    Postconditions:
        A local copy of defaultpath is made.
****************************************************************************)

PROCEDURE InitSwapFileDelete(VAR DefaultPath : ARRAY OF CHAR );



(****************************************************************************

    GetSwapFileName( 
                    VAR DefaultPath : ARRAY OF CHAR; 
                    VAR FileBuffer : ARRAY OF CHAR
                   );    

        Get a non existing file name for swap file.

    Preconditions:
        The calling routine should make sure FileBuffer is big enough to 
    hold the return file name.  FileBuffer does not need to contain anything
    when GetSwapFileName is called.  File will be created in directory specified 
    in DefaultPath.  If DefaultPath contains a non existing directory then 
    file will be created under the current directory.  GetSwapFile will call 
    GetFirstSwapFile to get the first possible name of swap file.  If the
    file already existed, then it will call GetNextSwapFile until a 
    non existing file is found.  Right now,  the first file returns in 
    GetFirstFile is "TLSWAP.$$$".
        Give a file name ( it should either come from GetFirstFile or from
    a previous call to GetNextFile ), GetNextFile will return a file name
    generated by the following rules:
      rule 1  -  File extension is modified from right to left.
      rule 2  -  If current character is '$' then change it to '1' and return.
      rule 3  -  If current character is '1' to '8' 
                                 then increment the character by 1 and return.
      rule 4  -  If current character is '9' 
                   then change it to '$' and 
                         modify the character on the left used on same rules.
    Postconditions:
        FileBuffer contains path name.

****************************************************************************)

PROCEDURE GetSwapFileName( 
                          VAR DefaultPath : ARRAY OF CHAR; 
                          VAR FileBuffer : ARRAY OF CHAR
                         );    



(****************************************************************************

    I just commented out this procedure because no one is using it.

    GetUniqueFileName(
                      VAR FileBuffer : ARRAY OF CHAR;
                        VAR FileName : ARRAY OF CHAR
                     ); 

    Get a non existing file based on the contents of FileName. 

    FileName will be searched under the current directory.  If FileName
    does not exist, then FileBuffer contains the current directory followed 
    by FileName.  If FileName exists, GetUniqueFileName will modify the 
    extension of FileName and return in FileBuffer containing the 
    current directory followed by FileName with modified extension.

    Preconditions:
        The calling should make sure FileBuffer is big enough to hold the
    return file name.  FileBuffer does not need to contain anything.
    FileName should contain a file name with extension '$$$'.

    Postconditions:
        FileBuffer contains path name.


PROCEDURE GetUniqueFileName(
                            VAR FileBuffer : ARRAY OF CHAR;
                              VAR FileName : ARRAY OF CHAR
                           ); 

****************************************************************************)

END SwapFile.
